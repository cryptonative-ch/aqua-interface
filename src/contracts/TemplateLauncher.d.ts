/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface TemplateLauncherInterface extends ethers.utils.Interface {
  functions: {
    "addTemplate(address)": FunctionFragment;
    "factory()": FunctionFragment;
    "getTemplate(uint256)": FunctionFragment;
    "getTemplateId(address)": FunctionFragment;
    "launchTemplate(uint256,bytes)": FunctionFragment;
    "removeTemplate(uint256)": FunctionFragment;
    "restrictedTemplates()": FunctionFragment;
    "templateId()": FunctionFragment;
    "templateInfo(address)": FunctionFragment;
    "updateTemplateRestriction(bool)": FunctionFragment;
    "verifyTemplate(uint256)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "addTemplate", values: [string]): string;
  encodeFunctionData(functionFragment: "factory", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getTemplate",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getTemplateId",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "launchTemplate",
    values: [BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "removeTemplate",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "restrictedTemplates",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "templateId",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "templateInfo",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "updateTemplateRestriction",
    values: [boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "verifyTemplate",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "addTemplate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "factory", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getTemplate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTemplateId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "launchTemplate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeTemplate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "restrictedTemplates",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "templateId", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "templateInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateTemplateRestriction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "verifyTemplate",
    data: BytesLike
  ): Result;

  events: {
    "TemplateAdded(address,uint256)": EventFragment;
    "TemplateLaunched(address,uint256)": EventFragment;
    "TemplateRemoved(address,uint256)": EventFragment;
    "TemplateVerified(address,uint256)": EventFragment;
    "UpdatedTemplateRestriction(bool)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "TemplateAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TemplateLaunched"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TemplateRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TemplateVerified"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "UpdatedTemplateRestriction"): EventFragment;
}

export class TemplateLauncher extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: TemplateLauncherInterface;

  functions: {
    addTemplate(
      _template: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "addTemplate(address)"(
      _template: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    factory(overrides?: CallOverrides): Promise<[string]>;

    "factory()"(overrides?: CallOverrides): Promise<[string]>;

    getTemplate(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string] & { template: string }>;

    "getTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string] & { template: string }>;

    getTemplateId(
      _template: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getTemplateId(address)"(
      _template: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    launchTemplate(
      _templateId: BigNumberish,
      _data: BytesLike,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "launchTemplate(uint256,bytes)"(
      _templateId: BigNumberish,
      _data: BytesLike,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    removeTemplate(
      _templateId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "removeTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    restrictedTemplates(overrides?: CallOverrides): Promise<[boolean]>;

    "restrictedTemplates()"(overrides?: CallOverrides): Promise<[boolean]>;

    templateId(overrides?: CallOverrides): Promise<[BigNumber]>;

    "templateId()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    templateInfo(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [boolean, BigNumber, BigNumber, boolean] & {
        exists: boolean;
        templateId: BigNumber;
        index: BigNumber;
        verified: boolean;
      }
    >;

    "templateInfo(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [boolean, BigNumber, BigNumber, boolean] & {
        exists: boolean;
        templateId: BigNumber;
        index: BigNumber;
        verified: boolean;
      }
    >;

    updateTemplateRestriction(
      _restrictedTemplates: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "updateTemplateRestriction(bool)"(
      _restrictedTemplates: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    verifyTemplate(
      _templateId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "verifyTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  addTemplate(
    _template: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "addTemplate(address)"(
    _template: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  factory(overrides?: CallOverrides): Promise<string>;

  "factory()"(overrides?: CallOverrides): Promise<string>;

  getTemplate(
    _templateId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getTemplate(uint256)"(
    _templateId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getTemplateId(
    _template: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getTemplateId(address)"(
    _template: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  launchTemplate(
    _templateId: BigNumberish,
    _data: BytesLike,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "launchTemplate(uint256,bytes)"(
    _templateId: BigNumberish,
    _data: BytesLike,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  removeTemplate(
    _templateId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "removeTemplate(uint256)"(
    _templateId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  restrictedTemplates(overrides?: CallOverrides): Promise<boolean>;

  "restrictedTemplates()"(overrides?: CallOverrides): Promise<boolean>;

  templateId(overrides?: CallOverrides): Promise<BigNumber>;

  "templateId()"(overrides?: CallOverrides): Promise<BigNumber>;

  templateInfo(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<
    [boolean, BigNumber, BigNumber, boolean] & {
      exists: boolean;
      templateId: BigNumber;
      index: BigNumber;
      verified: boolean;
    }
  >;

  "templateInfo(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<
    [boolean, BigNumber, BigNumber, boolean] & {
      exists: boolean;
      templateId: BigNumber;
      index: BigNumber;
      verified: boolean;
    }
  >;

  updateTemplateRestriction(
    _restrictedTemplates: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "updateTemplateRestriction(bool)"(
    _restrictedTemplates: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  verifyTemplate(
    _templateId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "verifyTemplate(uint256)"(
    _templateId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    addTemplate(
      _template: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "addTemplate(address)"(
      _template: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    factory(overrides?: CallOverrides): Promise<string>;

    "factory()"(overrides?: CallOverrides): Promise<string>;

    getTemplate(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getTemplateId(
      _template: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTemplateId(address)"(
      _template: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    launchTemplate(
      _templateId: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "launchTemplate(uint256,bytes)"(
      _templateId: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    removeTemplate(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "removeTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    restrictedTemplates(overrides?: CallOverrides): Promise<boolean>;

    "restrictedTemplates()"(overrides?: CallOverrides): Promise<boolean>;

    templateId(overrides?: CallOverrides): Promise<BigNumber>;

    "templateId()"(overrides?: CallOverrides): Promise<BigNumber>;

    templateInfo(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [boolean, BigNumber, BigNumber, boolean] & {
        exists: boolean;
        templateId: BigNumber;
        index: BigNumber;
        verified: boolean;
      }
    >;

    "templateInfo(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [boolean, BigNumber, BigNumber, boolean] & {
        exists: boolean;
        templateId: BigNumber;
        index: BigNumber;
        verified: boolean;
      }
    >;

    updateTemplateRestriction(
      _restrictedTemplates: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "updateTemplateRestriction(bool)"(
      _restrictedTemplates: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    verifyTemplate(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "verifyTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    TemplateAdded(
      template: string | null,
      templateId: null
    ): TypedEventFilter<
      [string, BigNumber],
      { template: string; templateId: BigNumber }
    >;

    TemplateLaunched(
      sale: string | null,
      templateId: null
    ): TypedEventFilter<
      [string, BigNumber],
      { sale: string; templateId: BigNumber }
    >;

    TemplateRemoved(
      template: string | null,
      templateId: null
    ): TypedEventFilter<
      [string, BigNumber],
      { template: string; templateId: BigNumber }
    >;

    TemplateVerified(
      template: string | null,
      templateId: null
    ): TypedEventFilter<
      [string, BigNumber],
      { template: string; templateId: BigNumber }
    >;

    UpdatedTemplateRestriction(
      restrictedTemplates: null
    ): TypedEventFilter<[boolean], { restrictedTemplates: boolean }>;
  };

  estimateGas: {
    addTemplate(
      _template: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "addTemplate(address)"(
      _template: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    factory(overrides?: CallOverrides): Promise<BigNumber>;

    "factory()"(overrides?: CallOverrides): Promise<BigNumber>;

    getTemplate(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTemplateId(
      _template: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTemplateId(address)"(
      _template: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    launchTemplate(
      _templateId: BigNumberish,
      _data: BytesLike,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "launchTemplate(uint256,bytes)"(
      _templateId: BigNumberish,
      _data: BytesLike,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    removeTemplate(
      _templateId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "removeTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    restrictedTemplates(overrides?: CallOverrides): Promise<BigNumber>;

    "restrictedTemplates()"(overrides?: CallOverrides): Promise<BigNumber>;

    templateId(overrides?: CallOverrides): Promise<BigNumber>;

    "templateId()"(overrides?: CallOverrides): Promise<BigNumber>;

    templateInfo(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    "templateInfo(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    updateTemplateRestriction(
      _restrictedTemplates: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "updateTemplateRestriction(bool)"(
      _restrictedTemplates: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    verifyTemplate(
      _templateId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "verifyTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addTemplate(
      _template: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "addTemplate(address)"(
      _template: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    factory(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "factory()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getTemplate(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTemplateId(
      _template: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTemplateId(address)"(
      _template: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    launchTemplate(
      _templateId: BigNumberish,
      _data: BytesLike,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "launchTemplate(uint256,bytes)"(
      _templateId: BigNumberish,
      _data: BytesLike,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    removeTemplate(
      _templateId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "removeTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    restrictedTemplates(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "restrictedTemplates()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    templateId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "templateId()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    templateInfo(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "templateInfo(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    updateTemplateRestriction(
      _restrictedTemplates: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "updateTemplateRestriction(bool)"(
      _restrictedTemplates: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    verifyTemplate(
      _templateId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "verifyTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
