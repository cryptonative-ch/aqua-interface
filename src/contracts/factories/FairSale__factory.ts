/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { FairSale } from "../FairSale";

export class FairSale__factory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FairSale {
    return new Contract(address, _abi, signerOrProvider) as FairSale;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "ownerId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "orderTokenOut",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "orderTokenIn",
        type: "uint96",
      },
    ],
    name: "CancellationOrder",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "ownerId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "orderTokenOut",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "orderTokenIn",
        type: "uint96",
      },
    ],
    name: "ClaimedFromOrder",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "_tokenIn",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "_tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "orderCancellationEndDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "_totalTokenOutAmount",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "_minBidAmountToReceive",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minimumBiddingAmountPerOrder",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minSellThreshold",
        type: "uint256",
      },
    ],
    name: "InitializedSale",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "ownerId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "orderTokenOut",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "orderTokenIn",
        type: "uint96",
      },
    ],
    name: "NewOrder",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "ownerId",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "NewUser",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint96",
        name: "auctionedTokens",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "soldBiddingTokens",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "clearingOrder",
        type: "bytes32",
      },
    ],
    name: "SaleCleared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "ownerId",
        type: "uint64",
      },
    ],
    name: "UserRegistration",
    type: "event",
  },
  {
    inputs: [],
    name: "FEE_DENOMINATOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "auctionStartedDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_orders",
        type: "bytes32[]",
      },
    ],
    name: "cancelOrders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_orders",
        type: "bytes32[]",
      },
    ],
    name: "claimFromParticipantOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "sumTokenOutAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sumTokenInAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "clearingPriceOrder",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_order",
        type: "bytes32",
      },
    ],
    name: "containsOrder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeNumerator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeReceiverUserId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSecondsRemainingInBatch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserId",
    outputs: [
      {
        internalType: "uint64",
        name: "ownerId",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialAuctionOrder",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "interimOrder",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "interimSumBidAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isAtomicClosureAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minSellThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minSellThresholdNotReached",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumBiddingAmountPerOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numUsers",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orderCancellationEndDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96[]",
        name: "_ordersTokenOut",
        type: "uint96[]",
      },
      {
        internalType: "uint96[]",
        name: "_ordersTokenIn",
        type: "uint96[]",
      },
      {
        internalType: "bytes32[]",
        name: "_prevOrders",
        type: "bytes32[]",
      },
    ],
    name: "placeOrders",
    outputs: [
      {
        internalType: "uint64",
        name: "ownerId",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "iterationSteps",
        type: "uint256",
      },
    ],
    name: "precalculateSellAmountSum",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "registerUser",
    outputs: [
      {
        internalType: "uint64",
        name: "ownerId",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "settleAuction",
    outputs: [
      {
        internalType: "bytes32",
        name: "clearingOrder",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96[]",
        name: "_ordersTokenOut",
        type: "uint96[]",
      },
      {
        internalType: "uint96[]",
        name: "_ordersTokenIn",
        type: "uint96[]",
      },
      {
        internalType: "bytes32[]",
        name: "_prevOrder",
        type: "bytes32[]",
      },
    ],
    name: "settleAuctionAtomically",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "templateName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenIn",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenOut",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "volumeClearingPriceOrder",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];
